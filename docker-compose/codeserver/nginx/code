upstream code {
    server localhost:8443;
    keepalive 64;
}

server {
    server_name code.erdferkel.eu;

    location / {
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://code;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        proxy_buffering off;
    }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/erdferkel.eu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/erdferkel.eu/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security Headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' data: wss: https: http:; frame-ancestors 'self';" always;

    # HSTS (Enforce HTTPS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Optional: Limit Request Size for Protection
    client_max_body_size 10M;
}

server {
    listen 80;
    listen [::]:80;
    server_name code.erdferkel.eu;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}